# use the main official rust docker image as our builder
FROM amd64/rust as builder

# create a new empty shell project
RUN USER=root cargo new --bin team-event-picker
WORKDIR /team-event-picker

# copy over your manifests
COPY ./Cargo.lock ./Cargo.lock
COPY ./Cargo.toml ./Cargo.toml

# this build step will cache your dependencies
RUN rustup toolchain install nightly
RUN PKG_CONFIG_ALLOW_CROSS=1 cargo +nightly build --release -Z sparse-registry
RUN rm src/*.rs

# copy your source tree
COPY ./src ./src

# build for release
RUN rm ./target/release/deps/team_event_picker*
RUN PKG_CONFIG_ALLOW_CROSS=1 cargo +nightly build --release -Z sparse-registry

# CMD ["/team-event-picker/target/release/team-event-picker"]

# our final base
FROM debian:bullseye-slim AS runtime

ENV USER=web
ENV UID=1001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

USER web

WORKDIR /app

# copy the build artifact from the build stage
COPY --from=builder /team-event-picker/target/release/team-event-picker /app
COPY --from=builder /team-event-picker/src/assets /app/src/assets
COPY ./.env /app/.env

CMD ["/app/team-event-picker"]
